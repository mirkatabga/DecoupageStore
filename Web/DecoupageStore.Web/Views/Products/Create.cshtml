@model DecoupageStore.Web.ViewModels.Create.CreateProductModel
@using DecoupageStore.Web.Infrastructure.Extensions;
@{
    ViewBag.Title = "Create";
}

<h2>Create Product</h2>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price, new { @class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MaterialId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select id="materialsSelect" class="form-control" name="MaterialId"></select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CategoryId, "Category", new { @class = "control-label col-md-2"})
        <div class="col-md-10">
            @*@Html.DropDownListFor(m => m.Category, new SelectList(new List<string> { "Bottle", "Box", "Plate" }), new { @class = "form-control" })*@
            <select id="categoriesSelect" class="form-control" name="CategoryId"></select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DaysToManufacture, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.DaysToManufacture, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Images, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span class="btn btn-default btn-file">
                Browse...
                <input id="upload" type="file" name="Images" multiple>
            </span>
            @Html.TextBox("tb-files-names", null, new { id = "tb-files-names", @class = "form-control", @readonly = "" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.Submit("Create", new { @class = "btn btn-primary" })
        </div>
    </div>

    @section styles{
        @Styles.Render("~/Styles/css")
    }

    @section scripts{
        @Scripts.Render("~/Scripts/app-scripts/custom")    
        <script>
            $("document").ready(function (event) {
                $("#upload").change(upload_changed);
                loadData();
            });

            function upload_changed (event) {
                var fileNamesStr = fileUploadHelper.getFilesNamesAsOneString(event.currentTarget.files, "*");
                $("#tb-files-names").val(fileNamesStr);
            }

            function loadData() {
                var $categoriesSelect = $('#categoriesSelect'),
                    $materialsSelect = $('#materialsSelect'),
                    promises = [];

                var categoriesPromise = jsonRequester.get('/products/categories', {
                    data: undefined,
                    headers:
                        {
                            Accept: 'text/plain, text/html'
                        },
                    dataType: 'html'
                },
                'text/plain'),
                    materialsPromise = jsonRequester.get('/products/materials', {
                        data: undefined,
                        headers:
                            {
                                Accept: 'text/plain, text/html'
                            },
                        dataType: 'html'
                    },
                'text/plain');

                promises[0] = categoriesPromise;
                promises[1] = materialsPromise;

                Promise.all(promises)
                .then(function (values) {
                    $categoriesSelect.html(values[0]);
                    $materialsSelect.html(values[1]);
                })
            }
        </script>
    }
}

